generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Rol {
  id        Int      @id() @default(autoincrement())
  name      String   @db.VarChar(250)
  slug      String   @db.VarChar(250)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  createdBy Int?
  users     User[]
}

model User {
  id           Int           @id() @default(autoincrement())
  firstName    String        @db.VarChar(250)
  lastName     String        @db.VarChar(250)
  nickName     String        @db.VarChar(250)
  email        String        @db.VarChar(100)
  password     String        @db.VarChar(250)
  image        String?       @db.VarChar(300)
  isActive     Boolean       @default(true)
  isDeleted    Boolean       @default(false)
  createdAt    DateTime      @default(now())
  createdBy    Int?
  updatedAt    DateTime?
  updatedBy    Int?
  deletedAt    DateTime?
  deletedBy    Int?
  rolId        Int
  rol          Rol           @relation(fields: [rolId], references: [id])
  appointments Appointment[]
}

model Patient {
  id           Int           @id() @default(autoincrement())
  firstName    String        @db.VarChar(250)
  lastName     String        @db.VarChar(250)
  email        String        @db.VarChar(100)
  image        String?       @db.VarChar(300)
  isActive     Boolean       @default(true)
  isDeleted    Boolean       @default(false)
  createdAt    DateTime      @default(now())
  createdBy    Int?
  updatedAt    DateTime?
  updatedBy    Int?
  deletedAt    DateTime?
  deletedBy    Int?
  appointments Appointment[]
}

model Appointment {
  id        Int       @id() @default(autoincrement())
  date      DateTime
  userId    Int
  patientId Int
  status    String    @db.VarChar(100)
  createdAt DateTime  @default(now())
  createdBy Int?
  updatedAt DateTime?
  updatedBy Int?
  deletedAt DateTime?
  deletedBy Int?
  user      User      @relation(fields: [userId], references: [id])
  patient   Patient   @relation(fields: [patientId], references: [id])
}
